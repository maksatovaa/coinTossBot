import { Bot, InlineKeyboard } from "grammy";

// –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞
const bot = new Bot("7980157597:AAGlBG2Op2CY_5ihIiviH3OBIGW9WeHuU6c");

// /start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –ø—Ä–∞–≤–∏–ª–∞
bot.command("start", (ctx) => {
  ctx.reply(`–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∏–≥—Ä–∞ "–û—Ä–µ–ª –∏ –†–µ—à–∫–∞".\n
–¢—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É –Ω–∞ –û—Ä–ª–∞ –∏–ª–∏ –†–µ—à–∫—É, –∞ —è –ø–æ–¥–±—Ä–æ—à—É –º–æ–Ω–µ—Ç—É –∏ —Å–∫–∞–∂—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
–ö–æ–º–∞–Ω–¥—ã:
/play ‚Äî –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É
/help ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã`);
});

// /help ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –∏ –∫–æ–º–∞–Ω–¥—ã
bot.command("help", (ctx) => {
  ctx.reply(`–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:
- –°–¥–µ–ª–∞–π —Å—Ç–∞–≤–∫—É –Ω–∞ "–û—Ä–µ–ª" –∏–ª–∏ "–†–µ—à–∫–∞" –∫–æ–º–∞–Ω–¥–æ–π /play
- –Ø –ø–æ–¥–±—Ä–æ—à—É –º–æ–Ω–µ—Ç—É —Å–ª—É—á–∞–π–Ω–æ
- –ï—Å–ª–∏ —É–≥–∞–¥–∞–ª ‚Äî –ø–æ–∑–¥—Ä–∞–≤–ª—è—é!
- –•–æ—á–µ—à—å ‚Äî —Å—ã–≥—Ä–∞–π —Å–Ω–æ–≤–∞!`);
});

// /play ‚Äî –Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Å—Ç–∞–≤–∫–∏
bot.command("play", async (ctx) => {
  const keyboard = new InlineKeyboard()
    .text("–û—Ä–µ–ª", "bet_heads")
    .text("–†–µ—à–∫–∞", "bet_tails");
  await ctx.reply("–°–¥–µ–ª–∞–π —Å—Ç–∞–≤–∫—É:", { reply_markup: keyboard });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞–≤–æ–∫
bot.callbackQuery(/bet_(heads|tails)/, async (ctx) => {
  const userChoice = ctx.match[1]; // heads –∏–ª–∏ tails

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const coinResult = Math.random() < 0.5 ? "heads" : "tails";

  let resultText = coinResult === userChoice
    ? "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –≤—ã–∏–≥—Ä–∞–ª üéâ"
    : "–£–≤—ã, —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª üòû";

  resultText += `\n\n–í—ã–ø–∞–ª–æ: ${coinResult === "heads" ? "–û—Ä–µ–ª" : "–†–µ—à–∫–∞"}`;

  // –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–∞
  const keyboard = new InlineKeyboard()
    .text("–î–∞", "play_again_yes")
    .text("–ù–µ—Ç", "play_again_no");

  // –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
  await ctx.editMessageText(resultText + "\n\n–°—ã–≥—Ä–∞–µ–º –µ—â—ë?", {
    reply_markup: keyboard,
  });

  // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏"
  await ctx.answerCallbackQuery();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ "–î–∞" –∏ "–ù–µ—Ç"
bot.callbackQuery("play_again_yes", async (ctx) => {
  const keyboard = new InlineKeyboard()
    .text("–û—Ä–µ–ª", "bet_heads")
    .text("–†–µ—à–∫–∞", "bet_tails");
  await ctx.editMessageText("–°–¥–µ–ª–∞–π —Å—Ç–∞–≤–∫—É:", { reply_markup: keyboard });
  await ctx.answerCallbackQuery();
});

bot.callbackQuery("play_again_no", async (ctx) => {
  await ctx.editMessageText("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –ß—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞ ‚Äî –≤–≤–µ–¥–∏ /play");
  await ctx.answerCallbackQuery();
});


// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.start();
console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...");
